
# Generated by CodiumAI

from Folder.myroutes.aircraft import aircraft_delete

# Dependencies:
# pip install pytest-mock
import pytest

class TestAircraftDelete:

    #  Delete an existing aircraft record and redirect to aircraft page
    def test_delete_existing_aircraft_record(self, mocker):
        # Arrange
        mock_flash = mocker.patch('Folder.myroutes.aircraft.flash')
        mock_redirect = mocker.patch('Folder.myroutes.aircraft.redirect')
        mock_url_for = mocker.patch('Folder.myroutes.aircraft.url_for')
        mock_Aircraft = mocker.patch('Folder.myroutes.aircraft.Aircraft')
        mock_db = mocker.patch('Folder.myroutes.aircraft.db')
        mock_logging = mocker.patch('Folder.myroutes.aircraft.logging')

        _id = 1
        aircraft = mock_Aircraft.query.get.return_value

        # Act
        result = aircraft_delete(_id)

        # Assert
        mock_Aircraft.query.get.assert_called_once_with(_id)
        mock_logging.debug.assert_called_once_with(f"Aircraft deleted: {_id}")
        mock_db.session.delete.assert_called_once_with(aircraft)
        mock_db.session.commit.assert_called_once()
        mock_flash.assert_called_once_with('Flight deleted')
        mock_redirect.assert_called_once_with(mock_url_for.return_value)

    #  Delete an aircraft record with an invalid ID and display an error message
    def test_delete_aircraft_record_invalid_id(self, mocker):
        # Arrange
        mock_flash = mocker.patch('Folder.myroutes.aircraft.flash')
        mock_redirect = mocker.patch('Folder.myroutes.aircraft.redirect')
        mock_url_for = mocker.patch('Folder.myroutes.aircraft.url_for')
        mock_Aircraft = mocker.patch('Folder.myroutes.aircraft.Aircraft')
        mock_db = mocker.patch('Folder.myroutes.aircraft.db')
        mock_logging = mocker.patch('Folder.myroutes.aircraft.logging')

        _id = -1

        # Act
        result = aircraft_delete(_id)

        # Assert
        mock_flash.assert_called_once_with('Invalid aircraft ID')
        mock_redirect.assert_called_once_with(mock_url_for.return_value)
